generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  authId       String   @unique
  email        String   @unique
  name         String
  image        String?
  role         UserRole @default(REGULAR)
  referralCode String   @unique
  preferences  Json?
  provider     String
  createdAt    DateTime @default(now())
}

model Referral {
  id           String   @id @default(cuid())
  referredBy   String
  referredWhom String
  createdAt    DateTime @default(now())
}

model PasswordReset {
  id        String   @id @default(cuid())
  email     String   @unique
  otp       String
  expiresAt DateTime
  createdAt DateTime @default(now())
}

enum UserRole {
  ADMIN
  REGULAR
}

model JobApplication {
  id                String   @id @default(uuid())
  userId            String
  jobTitle          String
  location          String
  companyId         String?
  status            String   @default("applied")
  appliedDate       DateTime
  followUpDate      DateTime?
  jobType           String
  salaryMin         Int?
  salaryMax         Int?
  currency          String?
  jobUrl            String?
  jobId             String?
  resumeId          String?
  coverLetterId     String?
  remote            String?
  applicationSource String?
  jobDescription    String?
  rounds            Json
  createdAt         DateTime @default(now())
}

model Company {
  id        String   @id @default(uuid())
  name      String   @unique
  website   String?
  logoUrl   String?
  industry  String?
  size      String?
  location  String?
  createdAt DateTime @default(now())
}

model Recruiter {
  id               String   @id @default(uuid())
  jobApplicationId String
  name             String
  email            String?
  phone            String?
  linkedinProfile  String?
  createdAt        DateTime @default(now())
}

model FollowUp {
  id               String   @id @default(uuid())
  userId           String
  jobApplicationId String?
  followUpDate     DateTime
  status           String   @default("PENDING")
  createdAt        DateTime @default(now())
}

model Resume {
  id               String   @id @default(uuid())
  userId           String
  title            String?
  jobApplicationId String?
  fileUrl          String
  createdAt        DateTime @default(now())
}

model CoverLetter {
  id               String   @id @default(uuid())
  userId           String
  title            String?
  jobApplicationId String?
  content          String
  createdAt        DateTime @default(now())
}

model Note {
  id               String   @id @default(uuid())
  userId           String
  jobApplicationId String?
  content          String
  pinned           Boolean  @default(false)
  color            String   @default("#FFFF00")
  createdAt        DateTime @default(now())
}
